#pragma once

#include <Arduino.h>
#include <vector>

namespace Bitmaps {

    struct BootRow {
        uint8_t row;
        std::vector<uint8_t> pixels;
        BootRow(uint8_t row, std::vector<uint8_t> pixels):
        row(row), pixels(pixels) {}
    };

    namespace Icons {
        const uint8_t Person[] = {0x78, 0x48, 0x48, 0x78, 0x00, 0xfc, 0x84}; //6x7
        const uint8_t Sun[] = {0x10, 0x44, 0x38, 0xba, 0x38, 0x44, 0x10}; //7x7
        const uint8_t Diashow[] = {0x3e, 0x22, 0xfa, 0x8a, 0x8e, 0x88, 0xf8}; //7x7
        const uint8_t Animation[] = {0x00, 0x72, 0x06, 0xee, 0x06, 0x72, 0x00}; //7x7
        const uint8_t Star[] = {0x10, 0x38, 0xfe, 0x7c, 0x38, 0x6c, 0x44}; //7x7
        const uint8_t Heart[] = {0x66, 0xff, 0xff, 0xff, 0x7e, 0x3c, 0x18}; //8x7
        const uint8_t Bell[] = {0x00, 0x30, 0x78, 0xfc, 0xfc, 0x00, 0x10}; //6x7
        const uint8_t Eye[] = {0x1c, 0x00, 0x22, 0x00, 0x49, 0x00, 0x9c, 0x80, 0x49, 0x00, 0x22, 0x00, 0x1c, 0x00}; //9x7
        const uint8_t Card[] = {0x00, 0xff, 0xff, 0xe0, 0x01, 0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xf0, 0x01, 0x92, 0x49, 0x30, 0x01, 0x92, 0x49, 0x30, 0x01, 0x92, 0x49, 0x30, 0x01, 0x92, 0x49, 0x30, 0x01, 0x92, 0x49, 0x30, 0x01, 0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xe0}; //32x32
        const uint8_t ArrowDown[] = {0xfc, 0x78, 0x30}; //6x3
        const uint8_t ArrowUp[] = {0x30, 0x78, 0xfc}; //6x3

        //Logos
        const uint8_t Twitch[] = {0x0f, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xf0, 0x30, 0x00, 0x00, 0x30, 0x70, 0x00, 0x00, 0x30, 0xf0, 0x00, 0x00, 0x30, 0xf0, 0x00, 0x00, 0x30, 0xf0, 0x00, 0x00, 0x30, 0xf0, 0x18, 0x0c, 0x30, 0xf0, 0x18, 0x0c, 0x30, 0xf0, 0x18, 0x0c, 0x30, 0xf0, 0x18, 0x0c, 0x30, 0xf0, 0x18, 0x0c, 0x30, 0xf0, 0x18, 0x0c, 0x30, 0xf0, 0x18, 0x0c, 0x30, 0xf0, 0x18, 0x0c, 0x30, 0xf0, 0x00, 0x00, 0x30, 0xf0, 0x00, 0x00, 0x30, 0xf0, 0x00, 0x00, 0x30, 0xf0, 0x00, 0x00, 0x30, 0xf0, 0x00, 0x00, 0x30, 0xf0, 0x00, 0x00, 0x70, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x01, 0xe0, 0xff, 0xf1, 0xff, 0xc0, 0xff, 0xf3, 0xff, 0x80, 0xff, 0xf7, 0xff, 0x00, 0xff, 0xff, 0xfe, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00}; //28x30
        const uint8_t YoutubeBase[] = {0x0f, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xf0}; //32x24
        const uint8_t YoutubePlay[] = {0x80, 0x00, 0xc0, 0x00, 0xf0, 0x00, 0xfc, 0x00, 0xfe, 0x00, 0xff, 0x80, 0xff, 0x80, 0xfe, 0x00, 0xfc, 0x00, 0xf0, 0x00, 0xc0, 0x00, 0x80, 0x00}; //9x12
        const uint16_t Instagram[] = {0x0,0x0,0x0,0x0,0x0,0x0,0x7118,0x7118,0x7118,0x7118,0x7118,0x7118,0x7138,0x7118,0x7118,0x7118,0x7118,0x7118,0x7118,0x7138,0x7118,0x7118,0x7118,0x7118,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7917,0x7917,0x7917,0x7917,0x7917,0x7137,0x7917,0x7937,0x7917,0x7117,0x7917,0x7917,0x7917,0x7137,0x7917,0x7917,0x7917,0x7917,0x7917,0x7917,0x7937,0x7917,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8116,0x7916,0x8116,0x8116,0x8116,0x8116,0x8116,0x8116,0x8116,0x8116,0x8116,0x7916,0x8116,0x8116,0x8116,0x8116,0x8116,0x8116,0x8116,0x8116,0x8117,0x8116,0x8116,0x8116,0x0,0x0,0x0,0x0,0x0,0x8115,0x8115,0x8115,0x8115,0x8115,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8115,0x8115,0x8115,0x8116,0x8115,0x0,0x0,0x0,0x8915,0x88f5,0x8915,0x8915,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x88f5,0x8915,0x88f5,0x8915,0x0,0x0,0x90f4,0x90f4,0x90f4,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x90f4,0x90f4,0x90f4,0x0,0x9913,0x98f3,0x98f3,0x98f3,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x98f3,0x98f3,0x0,0x0,0x98f3,0x98f3,0x98f3,0x98f3,0xa0f2,0xa0f2,0xa0f2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xa0f2,0xa0f2,0xa0f2,0xa0f2,0x0,0x0,0x0,0x0,0x0,0xa0f2,0xa0f2,0x0,0x0,0x0,0xa0f2,0xa0f2,0xa0f2,0xa8f1,0xa8f1,0xa8f1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xa8f1,0xa8f1,0xa8f1,0xa8f1,0xa8f1,0xa8f1,0xa8f1,0xa8f1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xa8d1,0xa8f1,0xa8f1,0xb0d0,0xb0d0,0xb0d0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xb0d1,0xb0f1,0xb0f1,0xb0d0,0xb0d0,0xb0d0,0xb0d1,0xb0d0,0xb0d1,0xb0d0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xb0d0,0xb0d0,0xb0d0,0xb0d0,0xb0d0,0xb0d0,0x0,0x0,0x0,0x0,0x0,0x0,0xb0d0,0xb0d0,0xb0d0,0xb0d0,0xb0d0,0x0,0x0,0xb8d0,0xb0d0,0xb0d0,0xb0d0,0xb0d0,0x0,0x0,0x0,0x0,0x0,0x0,0xb0d0,0xb0d0,0xb0d0,0xb8cf,0xb8cf,0xb8cf,0x0,0x0,0x0,0x0,0x0,0xb8cf,0xb8cf,0xb8cf,0xb8cf,0x0,0x0,0x0,0x0,0x0,0x0,0xb8cf,0xb8cf,0xb8cf,0xb8ef,0x0,0x0,0x0,0x0,0x0,0xb8cf,0xb8cf,0xb8cf,0xc0ce,0xc0ce,0xc0ce,0x0,0x0,0x0,0x0,0x0,0xc0ce,0xc0ce,0xc0ce,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc0ce,0xc0ce,0xc0ce,0x0,0x0,0x0,0x0,0x0,0xc0ce,0xc0ce,0xc0ce,0xc10d,0xc10d,0xc10d,0x0,0x0,0x0,0x0,0xc10e,0xc10e,0xc10d,0xc10d,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc10d,0xc10d,0xc10d,0xc10d,0x0,0x0,0x0,0x0,0xc10d,0xc10d,0xc10d,0xc12d,0xc12d,0xc12d,0x0,0x0,0x0,0x0,0xc12d,0xc12d,0xc12d,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc12d,0xc12d,0xc12d,0x0,0x0,0x0,0x0,0xc12d,0xc12d,0xc12d,0xc16c,0xc16c,0xc16c,0x0,0x0,0x0,0x0,0xc16c,0xc16c,0xc16c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc16c,0xc16c,0xc16c,0x0,0x0,0x0,0x0,0xc16c,0xc16c,0xc16c,0xc18c,0xc18c,0xc18c,0x0,0x0,0x0,0x0,0xc18c,0xc18c,0xc18c,0xc18c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc18c,0xc18c,0xc18c,0xc18c,0x0,0x0,0x0,0x0,0xc18c,0xc18c,0xc18c,0xc1cb,0xc1cb,0xc1cb,0x0,0x0,0x0,0x0,0x0,0xc1cb,0xc1cb,0xc1cb,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc1cb,0xc1cb,0xc1cb,0x0,0x0,0x0,0x0,0x0,0xc1cb,0xc1cb,0xc1cb,0xc9eb,0xc1eb,0xc9eb,0x0,0x0,0x0,0x0,0x0,0xc1eb,0xc1eb,0xc9eb,0xc1eb,0x0,0x0,0x0,0x0,0x0,0x0,0xc1ea,0xc9eb,0xc1eb,0xc9eb,0x0,0x0,0x0,0x0,0x0,0xc1eb,0xc1ea,0xc1eb,0xc22a,0xc20a,0xc22a,0x0,0x0,0x0,0x0,0x0,0x0,0xca0a,0xca2a,0xc20a,0xc22a,0xc22a,0x0,0x0,0xc22a,0xc22a,0xc22a,0xc22a,0xc22a,0x0,0x0,0x0,0x0,0x0,0x0,0xca2a,0xc22a,0xc22a,0xc249,0xc249,0xca4a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xca4a,0xc249,0xc249,0xca4a,0xc249,0xc249,0xc249,0xc249,0xc229,0xc249,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc249,0xc249,0xc24a,0xca89,0xca89,0xca89,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xca89,0xca89,0xca89,0xca89,0xca89,0xca89,0xca89,0xca89,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xca89,0xca89,0xca89,0xcac9,0xcac9,0xcac9,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xcac9,0xcac9,0xcac9,0xcac9,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xcac9,0xcac9,0xcac9,0xcb09,0xcb08,0xcb09,0xcb09,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xcb08,0xcb09,0xcb08,0xcb09,0x0,0xd348,0xd348,0xd348,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xd348,0xd348,0xd348,0x0,0x0,0xd3a8,0xd3a8,0xd3a8,0xd3a8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xd3a8,0xd3a8,0xd3a8,0xd3a8,0x0,0x0,0x0,0xd3e8,0xd3e8,0xdbe8,0xd3e8,0xd3e8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xdbe8,0xd3e8,0xd3e8,0xd3e8,0xd3e8,0x0,0x0,0x0,0x0,0x0,0xdc28,0xdc28,0xdc27,0xdc28,0xdc28,0xdc28,0xdc28,0xdc28,0xdc28,0xdc28,0xdc28,0xdc28,0xdc28,0xdc28,0xd428,0xdc28,0xdc28,0xdc28,0xdc28,0xd428,0xdc28,0xdc28,0xdc27,0xdc28,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xdc67,0xdc67,0xdc68,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc67,0xdc88,0xdc67,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xdcc7,0xdcc7,0xdcc7,0xdcc7,0xdcc7,0xdcc7,0xdcc7,0xdcc7,0xdcc7,0xdcc7,0xdcc8,0xdcc7,0xdca7,0xdcc7,0xdcc7,0xdcc7,0xe4a7,0xdcc7,0x0,0x0,0x0,0x0,0x0,0x0};
    }

    namespace Marks {
        const uint8_t ClockAnalog[][2] = {{0,31},{1,31},{2,31},{3,31},{0,32},{1,32},{2,32},{3,32},{60,31},{61,31},{62,31},{63,31},{60,32},{61,32},{62,32},{63,32},{31,0},{31,1},{31,2},{31,3},{32,0},{32,1},{32,2},{32,3},{31,60},{31,61},{31,62},{31,63},{32,60},{32,61},{32,62},{32,63},{16,5},{47,5},{58,16},{58,47},{5,16},{5,47},{16,58},{47,58},{32,32},{31,31},{32,31},{31,32}};
        const std::vector<BootRow> BootSequence = {{59,{31,32}},{58,{30,31,32,33}},{57,{29,30,33,34}},{56,{28,29,34,35}},{55,{28,35}},{54,{27,28,35,36}},{53,{26,27,36,37}},{52,{25,26,37,38}},{51,{24,25,38,39}},{50,{24,39}},{49,{23,24,39,40}},{48,{22,23,40,41}},{47,{21,22,41,42}},{46,{20,21,42,43}},{45,{20,43}},{44,{19,20,43,44}},{43,{18,19,44,45}},{42,{17,18,45,46}},{41,{16,17,46,47}},{40,{16,47}},{39,{15,16,47,48}},{38,{14,15,48,49}},{37,{13,14,49,50}},{36,{12,13,50,51}},{35,{12,51}},{34,{11,12,51,52}},{33,{11,52}},{32,{10,11,52,53}},{31,{10,53}},{30,{10,53}},{29,{10,53}},{28,{10,53}},{27,{10,53}},{26,{10,53}},{25,{10,53}},{24,{10,53}},{23,{9,10,53,54}},{22,{9,10,53,54}},{21,{9,10,53,54}},{20,{9,10,53,54}},{19,{9,10,53,54}},{18,{9,54}},{17,{9,54}},{16,{9,54}},{15,{9,54}},{14,{9,54}},{13,{9,54}},{12,{9,54}},{11,{9,54}},{10,{9,54}},{9,{8,9,54,55}},{8,{8,9,54,55}},{7,{8,9,54,55}},{6,{8,9,54,55}},{5,{8,9,54,55}},{4,{8,9,54,55}},{3,{8,9,54,55}},{4,{10,53}},{5,{10,11,52,53}},{6,{10,11,12,51,52,53}},{7,{10,12,13,50,51,53}},{8,{10,13,14,49,50,53}},{9,{10,11,14,15,48,49,52,53}},{10,{11,15,16,47,48,52}},{11,{11,16,17,46,47,52}},{12,{11,12,17,18,45,46,51,52}},{13,{12,18,19,44,45,51}},{14,{12,13,19,20,43,44,50,51}},{15,{13,20,21,42,43,50}},{16,{13,21,22,41,42,50}},{17,{13,14,22,23,40,41,49,50}},{18,{14,23,24,39,40,49}},{19,{14,15,24,25,38,39,48,49}},{19, {26,27,28,35,36,37}}, {18, {29,30,31,32,33,34}},{20,{15,23,24,39,40,48}},{21,{15,22,23,40,41,48}},{22,{15,16,21,22,41,42,47,48}},{23,{16,20,21,42,43,47}},{24,{16,17,19,20,43,44,46,47}},{25,{17,18,19,44,45,46}},{26,{17,18,45,46}},{27,{16,17,18,45,46,47}},{28,{15,16,18,19,44,45,47,48}},{29,{14,15,19,44,48,49}},{30,{13,14,19,20,43,44,49,50}},{31,{12,13,20,43,50,51}},{32,{12,13,20,43,50,51}},{33,{12,13,14,15,16,20,21,42,43,47,48,49,50,51}},{34,{16,17,21,42,46,47}},{35,{17,18,19,21,22,41,42,44,45,46}},{36,{19,20,22,41,43,44}},{37,{20,21,22,41,42,43}},{38,{21,22,23,40,41,42}},{39,{22,23,40,41}},{40,{23,24,39,40}},{41,{24,39}},{42,{24,25,38,39}},{43,{25,38}},{44,{25,26,37,38}},{45,{26,37}},{46,{26,37}},{47,{26,27,36,37}},{48,{27,36}},{49,{27,28,35,36}},{50,{28,35}},{51,{28,35}},{52,{28,29,34,35}},{53,{28,29,34,35}},{54,{29,34}},{55,{29,30,33,34}},{56,{30,33}},{57,{31,32}}};
    }

    namespace Colors {
        const uint16_t Twitch = 0x6214;
        const uint16_t Youtube = 0xF800;
        const uint16_t Coral = 0xFC10;
        const uint16_t DarkRed = 0xBA00;
    }
}